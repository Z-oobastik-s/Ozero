import React, { useState, useEffect } from 'react';
import Head from 'next/head';
import { motion, AnimatePresence } from 'framer-motion';
import { GetStaticProps } from 'next';
import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Link from 'next/link';

const HomePage = () => {
  const [activeTab, setActiveTab] = useState('fishing');
  const [isVideoPlaying, setIsVideoPlaying] = useState(false);

  // We'll use hardcoded text for now until translations are properly set up
  const t = (key: string) => {
    const translations: Record<string, string> = {
      'homepage.title': '–ì–ª–∞–≤–Ω–∞—è',
      'homepage.description': '–û–∑–µ—Ä–æ –ú–∏—Ö–∞–π–ª—ã–Ω–∞ ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–≥–æ –æ—Ç–¥—ã—Ö–∞ –∏ —Ä—ã–±–∞–ª–∫–∏.',
      'homepage.hero.title': '–û–∑–µ—Ä–æ –ú–∏—Ö–∞–π–ª—ã–Ω–∞',
      'homepage.hero.subtitle': '–ö–æ–º—Ñ–æ—Ä—Ç–Ω—ã–π –æ—Ç–¥—ã—Ö –∏ —Ä—ã–±–∞–ª–∫–∞',
      'homepage.hero.cta': '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
      'homepage.hero.secondaryCta': '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å',
      'homepage.services.title': '–ù–∞—à–∏ —É—Å–ª—É–≥–∏',
      'homepage.services.fishing.title': '–†—ã–±–∞–ª–∫–∞',
      'homepage.services.fishing.description': '–ë–æ–≥–∞—Ç—ã–π —É–ª–æ–≤ –∏ –≤—Å—ë –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π —Ä—ã–±–∞–ª–∫–∏',
      'homepage.services.accommodation.title': '–û—Ç–¥—ã—Ö',
      'homepage.services.accommodation.description': '–£—é—Ç–Ω—ã–µ –¥–æ–º–∏–∫–∏ –∏ –±–µ—Å–µ–¥–∫–∏ –¥–ª—è –≤–∞—à–µ–≥–æ –∫–æ–º—Ñ–æ—Ä—Ç–∞',
      'homepage.services.cafe.title': '–ö–∞—Ñ–µ',
      'homepage.services.cafe.description': '–í–∫—É—Å–Ω—ã–µ –±–ª—é–¥–∞ –∏–∑ —Å–≤–µ–∂–µ–π —Ä—ã–±—ã –∏ –¥—Ä—É–≥–∏–µ –¥–µ–ª–∏–∫–∞—Ç–µ—Å—ã',
      'homepage.lakeFeatures.title': '–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –æ–∑–µ—Ä–∞',
      'homepage.lakeFeatures.area.title': '–ü–ª–æ—â–∞–¥—å',
      'homepage.lakeFeatures.area.value': '15 –≥–µ–∫—Ç–∞—Ä–æ–≤',
      'homepage.lakeFeatures.depth.title': '–ì–ª—É–±–∏–Ω–∞',
      'homepage.lakeFeatures.depth.value': '–¥–æ 8 –º–µ—Ç—Ä–æ–≤',
      'homepage.lakeFeatures.fish.title': '–í–∏–¥—ã —Ä—ã–±',
      'homepage.lakeFeatures.fish.value': '–∫–∞—Ä–ø, –∞–º—É—Ä, —â—É–∫–∞, —Å–æ–º',
      'homepage.lakeFeatures.environment.title': '–û–∫—Ä—É–∂–µ–Ω–∏–µ',
      'homepage.lakeFeatures.environment.value': '–ª–µ—Å, —á–∏—Å—Ç—ã–π –≤–æ–∑–¥—É—Ö',
      'homepage.testimonials.title': '–û—Ç–∑—ã–≤—ã –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π',
      'homepage.testimonials.subtitle': '–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –æ –Ω–∞—Å –Ω–∞—à–∏ –≥–æ—Å—Ç–∏',
      'homepage.feedback.author1': '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
      'homepage.feedback.text1': '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ! –ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è —Ä—ã–±–∞–ª–∫–∞, —É—é—Ç–Ω—ã–µ –¥–æ–º–∏–∫–∏, –≤–∫—É—Å–Ω–∞—è –µ–¥–∞ –≤ –∫–∞—Ñ–µ. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–µ–¥—É –µ—â—ë —Ä–∞–∑!',
      'homepage.feedback.author2': '–°–µ—Ä–≥–µ–π –°–∏–¥–æ—Ä–æ–≤',
      'homepage.feedback.text2': '–û—Ç–ª–∏—á–Ω–æ–µ –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–¥—ã—Ö–∞ —Å —Å–µ–º—å–µ–π. –î–µ—Ç–∏ –≤ –≤–æ—Å—Ç–æ—Ä–≥–µ –æ—Ç –ø—Ä–∏—Ä–æ–¥—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ–∫–æ—Ä–º–∏—Ç—å —Ä—ã–±–æ–∫. –°–ø–∞—Å–∏–±–æ –∑–∞ —á—É–¥–µ—Å–Ω—ã–µ –≤—ã—Ö–æ–¥–Ω—ã–µ!',
      'homepage.feedback.author3': '–ê–Ω–¥—Ä–µ–π –ò–≤–∞–Ω–æ–≤',
      'homepage.feedback.text3': '–†–µ–≥—É–ª—è—Ä–Ω–æ –ø—Ä–∏–µ–∑–∂–∞–µ–º —Å –¥—Ä—É–∑—å—è–º–∏ –Ω–∞ –≤—ã—Ö–æ–¥–Ω—ã–µ. –û—Ç–ª–∏—á–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ, —Ö–æ—Ä–æ—à–∏–π –∫–ª—ë–≤, –ø—Ä–∏—è—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.',
      'homepage.gallery.title': '–§–æ—Ç–æ–≥–∞–ª–µ—Ä–µ—è',
      'homepage.gallery.viewAll': '–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Ñ–æ—Ç–æ',
      'homepage.video.title': '–í–∏–¥–µ–æ –æ –Ω–∞—à–µ–º –æ–∑–µ—Ä–µ',
      'homepage.video.description': '–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫—Ä–∞—Ç–∫–∏–π –≤–∏–¥–µ–æ–æ–±–∑–æ—Ä –Ω–∞—à–µ–≥–æ –æ–∑–µ—Ä–∞ –∏ –æ—Ç–¥—ã—Ö–∞',
      'common.learnMore': '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
      'common.readMore': '–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é',
      'common.bookNow': '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å'
    };
    return translations[key] || key;
  };

  const testimonials = [
    {
      id: 1,
      author: t('homepage.feedback.author1'),
      text: t('homepage.feedback.text1'),
      avatar: '/images/avatar1.jpg'
    },
    {
      id: 2,
      author: t('homepage.feedback.author2'),
      text: t('homepage.feedback.text2'),
      avatar: '/images/avatar2.jpg'
    },
    {
      id: 3,
      author: t('homepage.feedback.author3'),
      text: t('homepage.feedback.text3'),
      avatar: '/images/avatar3.jpg'
    }
  ];

  const services = [
    {
      id: 'fishing',
      title: t('homepage.services.fishing.title'),
      description: t('homepage.services.fishing.description'),
      icon: 'üé£',
      image: '/images/fishing.jpg'
    },
    {
      id: 'accommodation',
      title: t('homepage.services.accommodation.title'),
      description: t('homepage.services.accommodation.description'),
      icon: 'üè°',
      image: '/images/accommodation.jpg'
    },
    {
      id: 'cafe',
      title: t('homepage.services.cafe.title'),
      description: t('homepage.services.cafe.description'),
      icon: 'üç≤',
      image: '/images/cafe.jpg'
    }
  ];

  const features = [
    {
      id: 'area',
      title: t('homepage.lakeFeatures.area.title'),
      value: t('homepage.lakeFeatures.area.value'),
      icon: 'üíß'
    },
    {
      id: 'depth',
      title: t('homepage.lakeFeatures.depth.title'),
      value: t('homepage.lakeFeatures.depth.value'),
      icon: 'üåä'
    },
    {
      id: 'fish',
      title: t('homepage.lakeFeatures.fish.title'),
      value: t('homepage.lakeFeatures.fish.value'),
      icon: 'üêü'
    },
    {
      id: 'environment',
      title: t('homepage.lakeFeatures.environment.title'),
      value: t('homepage.lakeFeatures.environment.value'),
      icon: 'üèûÔ∏è'
    }
  ];

  return (
    <React.Fragment>
      <Head>
        <title>{t('homepage.title')} | –û–∑–µ—Ä–æ –ú–∏—Ö–∞–π–ª—ã–Ω–∞</title>
        <meta name="description" content={t('homepage.description')} />
      </Head>
      
      <main className="pt-16 md:pt-0">
        {/* Hero Section */}
        <section className="relative min-h-[90vh] flex items-center">
          <div className="absolute inset-0 z-0">
            <div className="absolute inset-0 bg-gradient-to-b from-black/60 via-black/40 to-black/60 z-10" />
            {/* –ó–∞–º–µ–Ω—è–µ–º –≤–∏–¥–µ–æ –Ω–∞ —Ü–≤–µ—Ç–Ω–æ–π —Ñ–æ–Ω */}
            <div className="bg-blue-900 w-full h-full"></div>
          </div>
          
          <div className="container-custom relative z-10 text-white">
            <div className="max-w-3xl">
              <motion.h1 
                className="text-4xl md:text-6xl font-bold mb-6"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.7 }}
              >
                {t('homepage.hero.title')}
              </motion.h1>
              
              <motion.p 
                className="text-xl md:text-2xl mb-8"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.7, delay: 0.2 }}
              >
                {t('homepage.hero.subtitle')}
              </motion.p>
              
              <motion.div 
                className="flex flex-wrap gap-4"
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.7, delay: 0.4 }}
              >
                <a href="#services" className="btn-primary">
                  {t('homepage.hero.cta')}
                </a>
                <Link href="/booking" className="btn-secondary">
                  {t('homepage.hero.secondaryCta')}
                </Link>
              </motion.div>
            </div>
          </div>
          
          <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-10">
            <a 
              href="#services" 
              className="flex flex-col items-center text-white animate-bounce"
            >
              <span className="mb-2 text-sm font-medium">–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑</span>
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 14l-7 7m0 0l-7-7m7 7V3" />
              </svg>
            </a>
          </div>
        </section>
        
        {/* Features Section */}
        <section className="py-16 bg-light" id="features">
          <div className="container-custom">
            <div className="max-w-4xl mx-auto">
              <div className="grid grid-cols-2 md:grid-cols-4 gap-6">
                {features.map((feature) => (
                  <motion.div 
                    key={feature.id}
                    className="bg-white p-6 rounded-xl shadow-lg text-center hover:shadow-xl transition-shadow"
                    whileHover={{ y: -5 }}
                  >
                    <div className="text-4xl mb-4">{feature.icon}</div>
                    <h3 className="font-bold text-lg mb-2">{feature.title}</h3>
                    <p className="text-gray-700">{feature.value}</p>
                  </motion.div>
                ))}
              </div>
            </div>
          </div>
        </section>
        
        {/* Services Section */}
        <section className="py-16 bg-white" id="services">
          <div className="container-custom">
            <div className="text-center mb-12">
              <h2 className="section-title inline-block">{t('homepage.services.title')}</h2>
              <p className="text-gray-600 mt-4 max-w-2xl mx-auto">–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —É–∑–Ω–∞–π—Ç–µ –±–æ–ª—å—à–µ –æ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö</p>
            </div>
            
            <div className="flex flex-wrap justify-center gap-4 mb-8">
              {services.map(service => (
                <button
                  key={service.id}
                  onClick={() => setActiveTab(service.id)}
                  className={`px-6 py-3 rounded-full font-medium transition-all duration-300 flex items-center gap-2 ${
                    activeTab === service.id 
                    ? 'bg-primary text-white shadow-lg' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                  }`}
                >
                  {service.icon}
                  {service.title}
                </button>
              ))}
            </div>
            
            <div className="mt-8">
              <AnimatePresence mode="wait">
                {services.map(service => (
                  activeTab === service.id && (
                    <motion.div 
                      key={service.id}
                      className="flex flex-col md:flex-row gap-8 items-center"
                      initial={{ opacity: 0, y: 20 }}
                      animate={{ opacity: 1, y: 0 }}
                      exit={{ opacity: 0, y: -20 }}
                      transition={{ duration: 0.5 }}
                    >
                      <div className="md:w-1/2">
                        {/* –ó–∞–º–µ–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ —Ü–≤–µ—Ç–Ω–æ–π –±–ª–æ–∫ */}
                        <div className="aspect-video bg-blue-200 rounded-xl w-full"></div>
                      </div>
                      <div className="md:w-1/2">
                        <h3 className="text-2xl font-bold mb-4">{service.title}</h3>
                        <p className="text-gray-700 mb-6">{service.description}</p>
                        <Link href={`/services/${service.id}`} className="btn-primary inline-flex items-center">
                          {t('common.learnMore')}
                          <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                          </svg>
                        </Link>
                      </div>
                    </motion.div>
                  )
                ))}
              </AnimatePresence>
            </div>
          </div>
        </section>
        
        {/* Video Section - –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç —Å —Ç–µ–∫—Å—Ç–æ–º */}
        <section className="py-16 bg-light">
          <div className="container-custom">
            <div className="text-center mb-12">
              <h2 className="section-title inline-block">{t('homepage.video.title')}</h2>
              <p className="text-gray-600 mt-4 max-w-2xl mx-auto">{t('homepage.video.description')}</p>
            </div>
            
            <div className="relative aspect-video max-w-4xl mx-auto shadow-2xl rounded-2xl overflow-hidden">
              <div className="absolute inset-0 bg-blue-300 flex items-center justify-center text-white">
                <div className="text-center">
                  <p className="text-xl font-bold mb-4">–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –≤–∏–¥–µ–æ!</p>
                  <p>–í–∏–¥–µ–æ–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –Ω–∞—à–µ–≥–æ –æ–∑–µ—Ä–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
                </div>
              </div>
            </div>
          </div>
        </section>
        
        {/* Testimonials Section */}
        <section className="py-16 bg-white">
          <div className="container-custom">
            <div className="text-center mb-12">
              <h2 className="section-title inline-block">{t('homepage.testimonials.title')}</h2>
              <p className="text-gray-600 mt-4 max-w-2xl mx-auto">{t('homepage.testimonials.subtitle')}</p>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {testimonials.map((testimonial) => (
                <motion.div 
                  key={testimonial.id}
                  className="bg-light p-6 rounded-xl"
                  whileHover={{ y: -5 }}
                >
                  <div className="flex mb-4">
                    {[...Array(5)].map((_, i) => (
                      <svg key={i} className="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                      </svg>
                    ))}
                  </div>
                  
                  <p className="mb-6 text-gray-700">{testimonial.text}</p>
                  
                  <div className="flex items-center">
                    <div className="w-12 h-12 rounded-full overflow-hidden mr-4 bg-blue-500 flex items-center justify-center text-white">
                      {testimonial.author.charAt(0)}
                    </div>
                    <div>
                      <h4 className="font-bold text-dark">{testimonial.author}</h4>
                      <p className="text-sm text-gray-500">–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç</p>
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>
        
        {/* Gallery Preview Section */}
        <section className="py-16 bg-light">
          <div className="container-custom">
            <div className="flex flex-col md:flex-row justify-between items-center mb-12">
              <h2 className="section-title">{t('homepage.gallery.title')}</h2>
              <Link href="/gallery" className="btn-primary mt-4 md:mt-0">
                {t('homepage.gallery.viewAll')}
              </Link>
            </div>
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              {[1, 2, 3, 4].map((item) => (
                <div key={item} className="relative aspect-square overflow-hidden rounded-lg bg-gradient-to-br from-blue-200 to-blue-400">
                  <div className="absolute inset-0 flex items-center justify-center text-white font-bold text-xl">
                    –§–æ—Ç–æ {item}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
        
        {/* CTA Section */}
        <section className="py-16 bg-primary text-white">
          <div className="container-custom">
            <div className="max-w-3xl mx-auto text-center">
              <h2 className="text-3xl md:text-4xl font-bold mb-6">–ì–æ—Ç–æ–≤—ã –æ—Ç–¥–æ—Ö–Ω—É—Ç—å –Ω–∞ –æ–∑–µ—Ä–µ –ú–∏—Ö–∞–π–ª—ã–Ω–∞?</h2>
              <p className="text-lg mb-8 text-white/80">–ó–∞–±—Ä–æ–Ω–∏—Ä—É–π—Ç–µ –º–µ—Å—Ç–æ –¥–ª—è —Ä—ã–±–∞–ª–∫–∏ –∏–ª–∏ –æ—Ç–¥—ã—Ö–∞ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è!</p>
              <Link href="/booking" className="btn-secondary bg-white text-primary hover:bg-white/90 hover:text-primary">
                {t('common.bookNow')}
                <svg className="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
                </svg>
              </Link>
            </div>
          </div>
        </section>
      </main>
    </React.Fragment>
  );
};

export const getStaticProps: GetStaticProps = async ({ locale }) => {
  return {
    props: {
      ...(await serverSideTranslations(locale || 'ru', ['common'])),
    },
  };
};

export default HomePage; 